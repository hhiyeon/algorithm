# 1. 테이블 정의하기
# 2. 점화식
# 3. 초기값

# dp[i][j] = 현재부터 j개의 계단을 연속으로 밟고 i번째 계단에서 얻을 수 있는 점수 합의 최대값 + i는 무조건 밟기
# 연속된 3 계단은 불가능

# dp[k][1] = max(dp[k-2][1], dp[k-2][2]) + s[k] : 1개의 계단을 연속으로 밟고, k번째 계단까지 최대 값
# 1개의 계단을 밟았다 = k-1 밟지 않음 = k -2 밟음
# s[k] = k번째 계단 점수

# dp[k][2] = dp[k-1][1] + s[k] : 2개의 연속된 계단, k번째 계단까지 최대값

# dp[1][1] = s[1], dp[1][2] = 0
# dp[2][1] = s[2], dp[2][2] = s[1] + s[2]

n = int(input())
dp = [[0 for col in range(3)] for row in range(n + 1)]
s = [0] * (n + 1)

for i in range(1, n + 1):  # 계단 값
    s[i] = int(input())

dp[1][1], dp[1][2] = s[1], 0
dp[2][1], dp[2][2] = s[2], s[1] + s[2]

for k in range(3, n + 1):
    dp[k][1] = max(dp[k - 2][1], dp[k - 2][2]) + s[k]
    dp[k][2] = dp[k - 1][1] + s[k]

print(max(dp[n][1], dp[n][2]))
