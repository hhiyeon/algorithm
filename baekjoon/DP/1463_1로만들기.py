# X가 3으로 나누어 떨어지면 3으로 나눈다.
# X가 2로 나누어 떨어지면 2로 나눈다.
# 1을 뺀다.
# N을 1으로 만드는 최소 연산 수

# 1. 테이블 정의하기
# D[i] = 1 으로 만들기 위해 필요한 연산 사용 횟수의 최솟값

# 2. 점화식 찾기
# 3으로 나누거나 : D[12] = D[4](3으로 나눈 것) + 1(3을 나눈 연산 횟수 증가)
# 2으로 나누거나 : D[12] = D[6] + 1
# 1을 빼거나 : D[12] = D[11] + 1
# 총 계산 = D[12] = min(D[4] + 1, D[6] + 1, D[11] + 1)

# 3. 초기값 정의하기
# 1의 연산 최소 횟수는 0
# 2의 연산 최소 횟수는 1
# D[1] = 0, D[2] = 1(초기화 안해도됨)

N = 10
dp = [0] * (N + 1)  # 0은 사용 X
dp[1] = 0

for n in range(2, N + 1):
    dp[n] = dp[n - 1] + 1

    if n % 2 == 0:
        dp[n] = min(dp[n // 2] + 1, dp[n])
    if n % 3 == 0:
        dp[n] = min(dp[n // 3] + 1, dp[n])

print(dp[N])
